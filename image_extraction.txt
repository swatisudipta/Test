from google import genai
import base64
import cairosvg

# Define input and output file paths
svg_input_path = "C:/Users/2869749/Desktop/ocr_text_image/figma user strory trial/My bills.svg"
png_output_path = "C:/Users/2869749/Desktop/ocr_text_image/figma user strory trial/My bills.png"

# Convert SVG to PNG
cairosvg.svg2png(url=svg_input_path, write_to=png_output_path)

print(f"SVG converted to PNG: {png_output_path}")



client=genai.Client(api_key='AIzaSyD3MBWYJudiLm54gZmIm_FoYpdt5wy8Dws')

def load_image(imgpath):
    with open(imgpath,'rb') as f:
        return base64.b64encode(f.read()).decode('utf-8')

'''response=client.models.generate_content(
    model='gemini-2.5-pro-vision',
    contents=[
        {'contents':[
            {'text':'Extract the information from the flochart images by preserving the logical order as indicated by the arrow directions.'},
            {'image_data':load_image('C:/Users/2869749/Desktop/ocr_text_image/images/page_005_img_001.png')}
        ]}

    ])'''

response = client.models.generate_content(
    model='gemini-2.5-flash',
    contents=[
      genai.types.Part.from_bytes(
        data=load_image('C:/Users/2869749/Desktop/ocr_text_image/figma user strory trial/My bills.png'),
        mime_type='image/png',
      ),
      '''First,extract all the information from the  images by considering all the different fields in the image like information inside
      boxes without missing any rows and columns. Second ,this information will be used to develop a user story in a software project.
      Generate two user story scenarios as examples.'''
    ]
  )
print(response.text)